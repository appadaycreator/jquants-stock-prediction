"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[74],{7970:(e,t,s)=>{s.d(t,{A:()=>a});var r=s(9233);class i{async initIndexedDB(){if(this.persistenceEnabled)return new Promise((e,t)=>{let s=indexedDB.open("optimized_cache_db",1);s.onerror=()=>{console.error("IndexedDB初期化エラー:",s.error),t(s.error)},s.onsuccess=()=>{this.db=s.result,console.info("IndexedDB初期化完了"),e()},s.onupgradeneeded=e=>{let t=e.target.result;if(!t.objectStoreNames.contains("cache")){let e=t.createObjectStore("cache",{keyPath:"key"});e.createIndex("timestamp","timestamp",{unique:!1}),e.createIndex("tags","tags",{unique:!1,multiEntry:!0}),e.createIndex("priority","priority",{unique:!1})}}})}async get(e){arguments.length>1&&void 0!==arguments[1]&&arguments[1],this.stats.totalRequests++;let t=this.memoryCache.get(e);if(t&&this.isValid(t))return this.stats.hits++,this.updateAccessTime(e),t.data;if(this.persistenceEnabled&&this.db)try{let t=await this.getFromIndexedDB(e);if(t&&this.isValid(t))return this.memoryCache.set(e,t),this.stats.hits++,this.updateAccessTime(e),t.data}catch(e){console.warn("永続化キャッシュからの取得に失敗:",e)}return this.stats.misses++,null}async set(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},r=s.ttl||this.config.defaultTtl,i=s.tags||[],a=s.priority||0,o=!1!==s.compress&&this.shouldCompress(t),n=!1!==s.persist&&this.persistenceEnabled,c={data:o?await this.compress(t):t,timestamp:Date.now(),ttl:r,tags:i,priority:a,compressed:o,size:this.calculateSize(t)};if(this.memoryCache.set(e,c),this.updateStats(),n&&this.db)try{await this.saveToIndexedDB(e,c)}catch(e){console.warn("永続化キャッシュへの保存に失敗:",e)}this.memoryCache.size>this.config.maxSize&&await this.evictEntries()}async remove(e){if(this.memoryCache.delete(e),this.persistenceEnabled&&this.db)try{await this.removeFromIndexedDB(e)}catch(e){console.warn("永続化キャッシュからの削除に失敗:",e)}}async removeByTags(e){let t=[];for(let[s,r]of this.memoryCache)r.tags&&r.tags.some(t=>e.includes(t))&&t.push(s);for(let e of t)await this.remove(e)}async clear(){if(this.memoryCache.clear(),this.persistenceEnabled&&this.db)try{await this.clearIndexedDB()}catch(e){console.warn("永続化キャッシュのクリアに失敗:",e)}this.resetStats()}isValid(e){return Date.now()-e.timestamp<e.ttl}updateAccessTime(e){let t=this.memoryCache.get(e);t&&(t.timestamp=Date.now())}calculateSize(e){return JSON.stringify(e).length}shouldCompress(e){return!!this.compressionEnabled&&this.calculateSize(e)>this.config.compressionThreshold}async compress(e){return btoa(JSON.stringify(e))}async decompress(e){try{let t=atob(e);return JSON.parse(t)}catch(t){return console.warn("データの展開に失敗:",t),e}}async getFromIndexedDB(e){return this.db?new Promise((t,s)=>{let r=this.db.transaction(["cache"],"readonly").objectStore("cache").get(e);r.onsuccess=()=>{let e=r.result;e?t(e.entry):t(null)},r.onerror=()=>{s(r.error)}}):null}async saveToIndexedDB(e,t){if(this.db)return new Promise((s,r)=>{let i=this.db.transaction(["cache"],"readwrite").objectStore("cache").put({key:e,entry:t,timestamp:Date.now()});i.onsuccess=()=>s(),i.onerror=()=>r(i.error)})}async removeFromIndexedDB(e){if(this.db)return new Promise((t,s)=>{let r=this.db.transaction(["cache"],"readwrite").objectStore("cache").delete(e);r.onsuccess=()=>t(),r.onerror=()=>s(r.error)})}async clearIndexedDB(){if(this.db)return new Promise((e,t)=>{let s=this.db.transaction(["cache"],"readwrite").objectStore("cache").clear();s.onsuccess=()=>e(),s.onerror=()=>t(s.error)})}async evictEntries(){if(this.lruEnabled)for(let[e]of Array.from(this.memoryCache.entries()).sort((e,t)=>{let[,s]=e,[,r]=t;return s.timestamp-r.timestamp}).slice(0,Math.floor(.1*this.config.maxSize)))this.memoryCache.delete(e),this.stats.evictions++}async removeExpiredEntries(){let e=Date.now(),t=[];for(let[s,r]of this.memoryCache)e-r.timestamp>=r.ttl&&t.push(s);t.forEach(e=>this.memoryCache.delete(e))}async deduplicateData(){let e=new Set,t=[];for(let[s,r]of this.memoryCache){let i=this.hashData(r.data);e.has(i)?t.push(s):e.add(i)}t.forEach(e=>this.memoryCache.delete(e)),t.length>0&&console.debug("重複データを削除:",{duplicates:t.length,remaining:this.memoryCache.size})}hashData(e){return JSON.stringify(e)}startCleanup(){this.cleanupTimer=setInterval(async()=>{await this.removeExpiredEntries(),await this.deduplicateData(),this.updateStats()},this.config.cleanupInterval)}startMemoryMonitoring(){setInterval(()=>{this.updateStats(),this.stats.memoryUsage>this.config.memoryThreshold&&this.evictEntries()},3e4)}updateStats(){this.stats.size=this.memoryCache.size,this.stats.hitRate=this.stats.totalRequests>0?this.stats.hits/this.stats.totalRequests*100:0;let e=0,t=Date.now(),s=0;for(let[,r]of this.memoryCache)e+=r.size||0,t=Math.min(t,r.timestamp),s=Math.max(s,r.timestamp);this.stats.memoryUsage=e,this.stats.oldestItem=t,this.stats.newestItem=s}resetStats(){this.stats={hits:0,misses:0,totalRequests:0,hitRate:0,size:0,maxSize:this.config.maxSize,memoryUsage:0,compressionRatio:0,evictions:0,oldestItem:0,newestItem:0}}getStats(){return(0,r._)({},this.stats)}getConfig(){return(0,r._)({},this.config)}updateConfig(e){this.config=(0,r._)({},this.config,e),e.maxSize&&this.memoryCache.size>e.maxSize&&this.evictEntries()}destroy(){this.cleanupTimer&&(clearInterval(this.cleanupTimer),this.cleanupTimer=null),this.db&&(this.db.close(),this.db=null)}constructor(e={}){this.memoryCache=new Map,this.db=null,this.cleanupTimer=null,this.config={maxSize:e.maxSize||1e3,defaultTtl:e.defaultTtl||3e5,cleanupInterval:e.cleanupInterval||6e4,compressionEnabled:!1!==e.compressionEnabled,persistenceEnabled:!1!==e.persistenceEnabled,lruEnabled:!1!==e.lruEnabled,memoryThreshold:e.memoryThreshold||0x3200000,compressionThreshold:e.compressionThreshold||1024},this.stats={hits:0,misses:0,totalRequests:0,hitRate:0,size:0,maxSize:this.config.maxSize,memoryUsage:0,compressionRatio:0,evictions:0,oldestItem:0,newestItem:0},this.compressionEnabled=this.config.compressionEnabled,this.persistenceEnabled=this.config.persistenceEnabled,this.lruEnabled=this.config.lruEnabled,this.initIndexedDB(),this.startCleanup(),this.startMemoryMonitoring()}}let a=new i},6881:(e,t,s)=>{s.d(t,{A:()=>i});class r{async handleError(e,t){let s=this.categorizeError(e,t);this.errorHistory.push(s);let r=t?"".concat(t.operation,"_").concat(t.component,"_").concat(e.message):e.message,i=Date.now(),a=this.lastErrorTime.get(r)||0,o=this.errorCounts.get(r)||0;if(i-a<6e4&&o>=this.maxErrorsPerMinute)return!1;if(this.errorCounts.set(r,o+1),this.lastErrorTime.set(r,i),console.error("統合エラーハンドラー:",s),this.isRecovering)return console.log("既に復旧処理中です"),!1;this.isRecovering=!0;try{for(let t of this.recoveryStrategies.filter(t=>t.condition(e)))if(await this.executeRecoveryStrategy(t,e))return console.log("復旧成功: ".concat(t.name)),this.isRecovering=!1,!0;if(await this.executeFallbackAction(e))return console.log("フォールバック復旧成功"),this.isRecovering=!1,!0}catch(e){console.error("復旧処理エラー:",e)}finally{this.isRecovering=!1}return!1}categorizeError(e,t){let s=e.message.toLowerCase(),r="unknown",i="medium";if(s.includes("fetch")||s.includes("network")||s.includes("connection"))r="network",i="medium";else if(s.includes("api")||s.includes("http")){r="api";let e=s.match(/http (\d+)/),t=e?parseInt(e[1]):0;i=t>=500?"high":t>=400?"medium":"low"}else s.includes("auth")||s.includes("unauthorized")||s.includes("forbidden")?(r="auth",i="high"):s.includes("data")||s.includes("json")||s.includes("parse")?(r="data",i="medium"):s.includes("timeout")||s.includes("abort")?(r="timeout",i="medium"):s.includes("validation")||s.includes("invalid")?(r="validation",i="low"):(s.includes("rsc payload")||s.includes("server component"))&&(r="system",i="high");return{id:"".concat(Date.now(),"_").concat(Math.random().toString(36).substr(2,9)),category:r,severity:i,message:e.message,stack:e.stack,context:t,timestamp:new Date().toISOString()}}initializeRecoveryStrategies(){this.recoveryStrategies.push({name:"rsc-payload-recovery",condition:e=>{let t=e.message.toLowerCase();return t.includes("rsc payload")||t.includes("server component")||t.includes("connection closed")},action:async()=>(console.log("RSC Payload復旧を実行中..."),await this.clearCaches(),!0),priority:1,maxAttempts:1}),this.recoveryStrategies.push({name:"network-recovery",condition:e=>{let t=e.message.toLowerCase();return t.includes("network")||t.includes("fetch")||t.includes("connection")||t.includes("timeout")},action:async()=>(console.log("ネットワーク復旧を実行中..."),navigator.onLine||await this.waitForOnline(),await this.clearCaches(),!0),priority:2,maxAttempts:5}),this.recoveryStrategies.push({name:"data-recovery",condition:e=>{let t=e.message.toLowerCase();return t.includes("data")||t.includes("json")||t.includes("parse")},action:async()=>(console.log("データ復旧を実行中..."),await this.clearLocalStorage(),await this.restoreDefaultData(),!0),priority:3,maxAttempts:2}),this.recoveryStrategies.push({name:"component-recovery",condition:e=>{var t;let s=(null===(t=e.stack)||void 0===t?void 0:t.toLowerCase())||"";return s.includes("react")||s.includes("component")||e.message.includes("render")},action:async()=>(console.log("コンポーネント復旧を実行中..."),await this.resetComponentState(),!0),priority:4,maxAttempts:1})}setupGlobalErrorHandling(){window.addEventListener("error",e=>{this.handleError(e.error)}),window.addEventListener("unhandledrejection",e=>{this.handleError(e.reason)})}async executeRecoveryStrategy(e,t){let s="".concat(e.name,"_").concat(t.message),r=this.retryAttempts.get(s)||0;if(r>=e.maxAttempts)return console.warn("最大リトライ回数に達しました: ".concat(e.name)),!1;this.retryAttempts.set(s,r+1);try{return await e.action()}catch(t){return console.error("復旧戦略 ".concat(e.name," でエラー:"),t),!1}}async executeFallbackAction(e){try{return await this.clearCaches(),await this.clearLocalStorage(),!0}catch(e){return console.error("フォールバック復旧エラー:",e),!1}}async clearCaches(){if("caches"in window){let e=await caches.keys();await Promise.all(e.map(e=>caches.delete(e)))}}async clearLocalStorage(){try{Object.keys(localStorage).forEach(e=>{(e.startsWith("app_cache:")||e.startsWith("next:")||e.startsWith("error_"))&&localStorage.removeItem(e)})}catch(e){console.warn("ローカルストレージのクリアに失敗:",e)}}async restoreDefaultData(){try{localStorage.setItem("app_settings",JSON.stringify({theme:"light",language:"ja",notifications:!0,autoRefresh:!0}))}catch(e){console.warn("デフォルトデータの復元に失敗:",e)}}async resetComponentState(){try{Object.keys(localStorage).filter(e=>e.startsWith("component_")||e.startsWith("react_")).forEach(e=>{localStorage.removeItem(e)})}catch(e){console.warn("コンポーネント状態のリセットに失敗:",e)}}async waitForOnline(){return new Promise(e=>{if(navigator.onLine){e();return}let t=()=>{window.removeEventListener("online",t),e()};window.addEventListener("online",t)})}getErrorStats(){let e={},t={},s=this.errorHistory.slice(-10).map(e=>({error:e.message,timestamp:e.timestamp,severity:e.severity}));for(let s of this.errorHistory)e[s.category]=(e[s.category]||0)+1,t[s.severity]=(t[s.severity]||0)+1;let r=Array.from(this.retryAttempts.values()).reduce((e,t)=>e+t,0),i=this.errorHistory.filter(e=>"unknown"!==e.category).length;return{totalErrors:this.errorHistory.length,errorsByCategory:e,errorsBySeverity:t,recentErrors:s,recoveryStats:{totalRecoveries:r,successfulRecoveries:i,failedRecoveries:r-i,successRate:r>0?i/r*100:0}}}clearErrorLog(){this.errorHistory=[],this.retryAttempts.clear(),this.errorCounts.clear(),this.lastErrorTime.clear()}async performHealthCheck(){let e=[],t=[];navigator.onLine||(e.push("ネットワーク接続がありません"),t.push("ネットワーク接続を確認してください"));try{localStorage.setItem("health_check","test"),localStorage.removeItem("health_check")}catch(s){e.push("ローカルストレージが利用できません"),t.push("ブラウザの設定を確認してください")}if("caches"in window)try{(await caches.keys()).length>10&&(e.push("キャッシュが多すぎます"),t.push("キャッシュをクリアしてください"))}catch(t){e.push("キャッシュAPIが利用できません")}return"memory"in performance&&performance.memory.usedJSHeapSize/1024/1024>100&&(e.push("メモリ使用量が高いです"),t.push("ページを再読み込みしてください")),{isHealthy:0===e.length,issues:e,recommendations:t}}constructor(){this.errorHistory=[],this.errorCounts=new Map,this.lastErrorTime=new Map,this.retryAttempts=new Map,this.recoveryStrategies=[],this.isRecovering=!1,this.maxErrorsPerMinute=10,this.maxRetryAttempts=3,this.initializeRecoveryStrategies(),this.setupGlobalErrorHandling()}}let i=new r}}]);