name: Update GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 手動実行可能

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup config and data
      run: |
        # config.yamlが存在しない場合、サンプルファイルからコピー
        if [ ! -f "config.yaml" ]; then
          cp config.yaml.sample config.yaml
          echo "✅ config.yaml をサンプルから作成しました"
        fi
        
        # サンプルデータを生成（実データがない場合）
        if [ ! -f "processed_stock_data.csv" ]; then
          python create_sample_data.py
          echo "✅ サンプルデータを生成しました"
        fi
    
    - name: Generate web data
      run: |
        python generate_web_data.py
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-app/package-lock.json
    
    - name: Install and build
      working-directory: web-app
      run: |
        npm ci
        npm run build
    
    - name: Copy to docs
      run: |
        rm -rf docs/web-app
        cp -r web-app/dist docs/web-app
        touch docs/.nojekyll
    
    - name: Setup Pages (with auto-enablement)
      id: setup-pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
      continue-on-error: true
    
    - name: Upload artifact
      if: steps.setup-pages.outcome == 'success'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
    
    - name: Deploy to GitHub Pages
      if: steps.setup-pages.outcome == 'success'
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Fallback - Commit to gh-pages branch
      if: steps.setup-pages.outcome == 'failure'
      run: |
        echo "⚠️ GitHub Pages自動有効化に失敗しました。gh-pagesブランチにコミットします..."
        
        # gh-pagesブランチを作成/切り替え
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # 既存のgh-pagesブランチを削除（存在する場合）
        git push origin --delete gh-pages || true
        
        # 新しいgh-pagesブランチを作成
        git checkout --orphan gh-pages
        git rm -rf .
        
        # docsフォルダの内容をルートにコピー
        cp -r docs/* .
        cp docs/.nojekyll .
        
        # コミットしてプッシュ
        git add .
        git commit -m "🚀 Deploy to GitHub Pages (fallback method)"
        git push origin gh-pages
        
        echo "✅ gh-pagesブランチにデプロイしました"
        echo "📝 手動設定が必要: Settings → Pages → Source: Deploy from a branch → Branch: gh-pages"
