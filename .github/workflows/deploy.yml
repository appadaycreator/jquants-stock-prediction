name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# GitHub Pagesのデプロイに必要な権限を設定
permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行を制限
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      actions: read
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
        cache-dependency-path: 'requirements-deploy.txt'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-deploy.txt
        
    - name: Create required directories
      run: |
        mkdir -p docs/data
        echo "Required directories created"
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'web-app/package-lock.json'
        
    - name: Cache Next.js build
      uses: actions/cache@v4
      with:
        path: |
          web-app/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('web-app/package-lock.json') }}-${{ hashFiles('web-app/**/*.js', 'web-app/**/*.jsx', 'web-app/**/*.ts', 'web-app/**/*.tsx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('web-app/package-lock.json') }}-
          ${{ runner.os }}-nextjs-
        
    - name: Install Node.js dependencies
      run: |
        cd web-app
        npm ci --legacy-peer-deps --prefer-offline --no-audit --no-fund
        
    - name: Prepare for static build
      run: |
        cd web-app
        # APIルートを一時的に移動
        if [ -d "src/app/api" ]; then
          mv src/app/api temp_api
          echo "APIルートを一時的に移動しました"
        fi
        
    - name: Build web application
      env:
        GITHUB_ACTIONS: "true"
        NODE_ENV: "production"
        NEXT_TELEMETRY_DISABLED: "1"
        NEXT_BUILD_WORKERS: "2"
      run: |
        cd web-app
        npm run build
        
    - name: Copy build output to docs directory
      run: |
        cd web-app
        # outディレクトリからdocsディレクトリにコピー
        if [ -d "out" ]; then
          rm -rf docs
          cp -r out docs
          echo "Build output copied to docs directory"
        else
          echo "Warning: out directory not found"
        fi
        
    - name: Restore API routes
      run: |
        cd web-app
        # APIルートを復元
        if [ -d "temp_api" ]; then
          mv temp_api src/app/api
          echo "APIルートを復元しました"
        fi
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v4
      with:
        path: ./web-app/docs

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pull-requests: read
      actions: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4