name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# GitHub Pagesのデプロイに必要な権限を設定
permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行を制限
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip cache purge || echo "Cache purge completed"
        pip install --no-cache-dir -r requirements.txt
        
    - name: Create required directories
      run: |
        mkdir -p logs
        mkdir -p data
        echo "Required directories created"
        
    - name: Generate web data
      env:
        JQUANTS_EMAIL: ${{ secrets.JQUANTS_EMAIL }}
        JQUANTS_PASSWORD: ${{ secrets.JQUANTS_PASSWORD }}
        JQUANTS_ID_TOKEN: ${{ secrets.JQUANTS_ID_TOKEN }}
      run: |
        python generate_web_data.py
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'web-app/package-lock.json'
        
    - name: Install Node.js dependencies
      run: |
        cd web-app
        npm ci --legacy-peer-deps
        
    - name: Build web application
      run: |
        cd web-app
        npm run export
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./web-app/out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4