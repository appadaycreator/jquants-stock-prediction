name: Update GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 手動実行可能

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup config and data
      run: |
        # config.yamlが存在しない場合、サンプルファイルからコピー
        if [ ! -f "config.yaml" ]; then
          cp config.yaml.sample config.yaml
          echo "✅ config.yaml をサンプルから作成しました"
        fi
        
        # サンプルデータを生成（実データがない場合）
        if [ ! -f "processed_stock_data.csv" ]; then
          python create_sample_data.py
          echo "✅ サンプルデータを生成しました"
        fi
    
    - name: Generate web data
      run: |
        python generate_web_data.py
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-app/package-lock.json
    
    - name: Install and build
      working-directory: web-app
      run: |
        npm ci
        npm run build
    
    - name: Copy to docs
      run: |
        rm -rf docs/web-app
        cp -r web-app/dist docs/web-app
        touch docs/.nojekyll
    
    - name: Setup Pages
      id: setup-pages
      uses: actions/configure-pages@v4
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Always show deployment status
      if: always()
      run: |
        echo "📊 ===== デプロイ状況レポート ====="
        echo "ビルド日時: $(date)"
        echo "GitHub リポジトリ: ${{ github.repository }}"
        echo ""
        
        # ファイル存在確認
        if [ -f "docs/index.html" ]; then
          echo "✅ ランディングページ: docs/index.html 存在"
        else
          echo "❌ ランディングページ: docs/index.html 不在"
        fi
        
        if [ -f "docs/web-app/index.html" ]; then
          echo "✅ Webアプリ: docs/web-app/index.html 存在"
        else
          echo "❌ Webアプリ: docs/web-app/index.html 不在"
        fi
        
        if [ -d "docs/web-app/data" ]; then
          echo "✅ JSONデータ: docs/web-app/data/ 存在"
          echo "   📁 データファイル数: $(ls docs/web-app/data/*.json 2>/dev/null | wc -l)"
        else
          echo "❌ JSONデータ: docs/web-app/data/ 不在"
        fi
        
        echo ""
        echo "🎯 === デプロイ完了 ==="
        echo "✅ GitHub Actions による自動デプロイが完了しました"
        echo ""
        echo "🌐 アクセスURL:"
        echo "https://appadaycreator.github.io/jquants-stock-prediction/"
        echo ""
        echo "⏰ 表示まで: 5-10分"
        echo "🔄 トラブル時: ブラウザキャッシュクリア"
