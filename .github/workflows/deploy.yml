name: Update GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # 手動実行可能

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Setup config and data
      run: |
        # config.yamlが存在しない場合、サンプルファイルからコピー
        if [ ! -f "config.yaml" ]; then
          cp config.yaml.sample config.yaml
          echo "✅ config.yaml をサンプルから作成しました"
        fi
        
        # サンプルデータを生成（実データがない場合）
        if [ ! -f "processed_stock_data.csv" ]; then
          python create_sample_data.py
          echo "✅ サンプルデータを生成しました"
        fi
    
    - name: Generate web data
      run: |
        python generate_web_data.py
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-app/package-lock.json
    
    - name: Install and build
      working-directory: web-app
      run: |
        npm ci
        npm run build
    
    - name: Copy to docs
      run: |
        rm -rf docs/web-app
        cp -r web-app/dist docs/web-app
        touch docs/.nojekyll
    
    - name: Setup Pages (with auto-enablement)
      id: setup-pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
      continue-on-error: true
    
    - name: Upload artifact
      if: steps.setup-pages.outcome == 'success'
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs
    
    - name: Deploy to GitHub Pages
      if: steps.setup-pages.outcome == 'success'
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Fallback - Create deployment info
      if: failure()
      run: |
        echo "⚠️ GitHub Pages デプロイに失敗しました"
        echo "📁 ビルド済みファイルは docs/ フォルダに準備されています"
        echo "🔧 手動設定方法:"
        echo "1. Settings → Pages"
        echo "2. Source: Deploy from a branch"
        echo "3. Branch: main, Folder: /docs"
        echo "4. Save"
        echo ""
        echo "🌐 設定後のアクセスURL:"
        echo "https://appadaycreator.github.io/jquants-stock-prediction/"
        
        # デプロイ情報をファイルに保存
        cat > deployment-info.txt << EOF
        GitHub Pages デプロイ情報
        ========================
        
        ビルド日時: $(date)
        ビルド状況: ✅ 成功 (ファイル準備完了)
        デプロイ状況: ❌ 自動デプロイ失敗
        
        手動設定手順:
        1. GitHub リポジトリ → Settings → Pages
        2. Source: "Deploy from a branch"
        3. Branch: "main"
        4. Folder: "/docs"
        5. Save をクリック
        
        期待されるURL:
        https://appadaycreator.github.io/jquants-stock-prediction/
        
        ファイル構成:
        - docs/index.html (ランディングページ)
        - docs/web-app/ (React ダッシュボード)
        - docs/.nojekyll (Jekyll 無効化)
        
        トラブルシューティング:
        - 5-10分待ってからアクセス
        - ブラウザキャッシュをクリア
        - HTTPS でアクセス
        EOF
